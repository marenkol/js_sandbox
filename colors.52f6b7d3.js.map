{"version":3,"sources":["colors.js"],"names":["Color","r","g","b","Math","round","lightness","getLightness","floor","max","random","str","matches","match","myColor","window"],"mappings":";AAiEA,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAhEqBA,IAAAA,EAgErB,WA/DcC,SAAAA,EAAAA,EAAGC,EAAGC,GAAG,EAAA,KAAA,GAChBF,KAAAA,EAAIA,EACJC,KAAAA,EAAIA,EACJC,KAAAA,EAAIA,EA4DX,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,WAzDW,MAAA,WACKC,MAAAA,OAAAA,OAAAA,KAAKC,MAAM,KAAKJ,GAAOG,MAAAA,OAAAA,KAAKC,MAAM,KAAKH,GAAOE,MAAAA,OAAAA,KAAKC,MAAM,KAAKF,GAA5E,OAwDF,CAAA,IAAA,UArDU,MAAA,WACHF,KAAAA,EAAI,EACJC,KAAAA,EAAI,EACJC,KAAAA,EAAI,IAkDX,CAAA,IAAA,UA/CU,MAAA,WACHF,KAAAA,EAAI,IACJC,KAAAA,EAAI,IACJC,KAAAA,EAAI,MA4CX,CAAA,IAAA,eAzCe,MAAA,WACN,OAAC,KAAKF,EAAI,KAAKC,EAAI,KAAKC,GAAK,IAwCtC,CAAA,IAAA,cArCc,MAAA,WACNG,IAAAA,EAAY,KAAKC,eAClBN,KAAAA,EAAIK,EACJJ,KAAAA,EAAII,EACJH,KAAAA,EAAIG,IAiCX,CAAA,IAAA,SA9BS,MAAA,WAEFL,KAAAA,EADO,IACG,KAAKA,EACfC,KAAAA,EAFO,IAEG,KAAKA,EACfC,KAAAA,EAHO,IAGG,KAAKA,IA0BtB,CAAA,IAAA,SAvBS,MAAA,WAGFF,KAAAA,EAAIG,KAAKI,MAAqBC,IAAfL,KAAKM,SADb,GAEPR,KAAAA,EAAIE,KAAKI,MAAqBC,IAAfL,KAAKM,SAFb,GAGPP,KAAAA,EAAIC,KAAKI,MAAqBC,IAAfL,KAAKM,SAHb,KAqBd,CAAA,IAAA,aAfYC,MAAAA,SAAAA,GACJC,IAAAA,EAAUD,EAAIE,MAAO,8BASpBb,MAPK,CACXC,EAAGW,EAAQ,GACXV,EAAGU,EAAQ,GACXT,EAAGS,EAAQ,QASd,EAAA,GAAA,QAAA,QAAA,EADA,IAAME,EAAU,IAAId,EAAM,EAAE,EAAE,GAC9Be,OAAOD,QAAUA","file":"colors.52f6b7d3.js","sourceRoot":"..","sourcesContent":["// Task 1\r\nexport default class Color {\r\n\tconstructor( r, g, b ){\r\n\t\tthis.r = r;\r\n\t\tthis.g = g;\r\n\t\tthis.b = b;\r\n\t}\r\n\r\n\ttoString(){\r\n\t\treturn `rgb(${Math.round(this.r)}, ${Math.round(this.g)}, ${Math.round(this.b)})`;\r\n\t}\r\n\r\n\ttoBlack(){\r\n\t\tthis.r = 0;\r\n\t\tthis.g = 0;\r\n\t\tthis.b = 0;\r\n\t}\r\n\r\n\ttoWhite(){\r\n\t\tthis.r = 255;\r\n\t\tthis.g = 255;\r\n\t\tthis.b = 255;\r\n\t}\r\n\r\n\tgetLightness(){\r\n\t\treturn (this.r + this.g + this.b) / 3;\r\n\t}\r\n\r\n\ttoGrayscale(){\r\n\t\tconst lightness = this.getLightness();\r\n\t\tthis.r = lightness;\r\n\t\tthis.g = lightness;\r\n\t\tthis.b = lightness;\r\n\t}\r\n\r\n\tinvert(){\r\n\t\tconst max = 255;\r\n\t\tthis.r = max - this.r;\r\n\t\tthis.g = max - this.g;\r\n\t\tthis.b = max - this.b;\r\n\t}\r\n\r\n\trandom(){\r\n\t\tconst max = 255;\r\n\t\tconst min = 0;\r\n\t\tthis.r = Math.floor(Math.random()*(max-min+1)+min);\r\n\t\tthis.g = Math.floor(Math.random()*(max-min+1)+min);\r\n\t\tthis.b = Math.floor(Math.random()*(max-min+1)+min);\r\n\t}\r\n\r\n\tfromString(str){\r\n\t\tconst matches = str.match( /^rgb\\((\\d+),(\\d+),(\\d+)\\)$/ );\r\n\r\n\t\tlet Color = {\r\n\t\t\tr: matches[1],\r\n\t\t\tg: matches[2],\r\n\t\t\tb: matches[3]\r\n\t\t}\r\n\r\n\t\t// console.log(Color);\r\n\t\treturn Color;\r\n\t}\r\n}\r\n\r\nconst myColor = new Color(0,0,0);\r\nwindow.myColor = myColor\r\n"]}